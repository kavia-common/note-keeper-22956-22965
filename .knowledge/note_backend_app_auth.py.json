{"is_source_file": true, "format": "Python", "description": "This file implements authentication functionalities for a Flask-based web application. It provides methods for password hashing and verification, token creation and validation using itsdangerous, and a decorator for route protection requiring token-based authentication.", "external_files": ["flask", "werkzeug.security", "itsdangerous", "./models", "./db"], "external_methods": ["current_app.config['SECRET_KEY']", "generate_password_hash", "check_password_hash", "URLSafeTimedSerializer.dumps", "URLSafeTimedSerializer.loads", "db.session.get"], "published": ["hash_password", "verify_password", "create_token", "verify_token", "auth_required"], "classes": [], "methods": [{"name": "URLSafeTimedSerializer _get_serializer()", "description": "Creates and returns a URLSafeTimedSerializer instance using the application's secret key.", "scope": "", "scopeKind": ""}, {"name": "str hash_password(password: str)", "description": "Hashes a plaintext password using Werkzeug's security utility.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(pw_hash: str, password: str)", "description": "Verifies a plaintext password against a stored hash.", "scope": "", "scopeKind": ""}, {"name": "str create_token(user: User)", "description": "Generates a signed token containing the user's ID and email.", "scope": "", "scopeKind": ""}, {"name": "Optional[Tuple[int,str]] verify_token(token: str)", "description": "Validates a signed token and extracts user ID and email if valid.", "scope": "", "scopeKind": ""}, {"name": "auth_required(fn)", "description": "A decorator for Flask routes that enforces token-based authentication, injecting the current user into the request context.", "scope": "", "scopeKind": ""}, {"name": "wrapper(*args, **kwargs)", "scope": "auth_required", "scopeKind": "function", "description": "unavailable"}], "calls": ["current_app.config['SECRET_KEY']", "generate_password_hash", "check_password_hash", "URLSafeTimedSerializer.dumps", "URLSafeTimedSerializer.loads", "db.session.get"], "search-terms": ["flask auth decorator", "token-based auth", "password hashing", "JWT alternative", "auth middleware", "User model", "werkzeug security"], "state": 2, "file_id": 10, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "TOKEN_MAX_AGE_SECONDS", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/auth.py", "pattern": "/^TOKEN_MAX_AGE_SECONDS = 60 * 60 * 24 * 7  # 7 days$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_get_serializer", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/auth.py", "pattern": "/^def _get_serializer() -> URLSafeTimedSerializer:$/", "language": "Python", "typeref": "typename:URLSafeTimedSerializer", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "auth_required", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/auth.py", "pattern": "/^def auth_required(fn):$/", "language": "Python", "kind": "function", "signature": "(fn)"}, {"_type": "tag", "name": "create_token", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/auth.py", "pattern": "/^def create_token(user: User) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(user: User)"}, {"_type": "tag", "name": "hash_password", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/auth.py", "pattern": "/^def hash_password(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/auth.py", "pattern": "/^def verify_password(pw_hash: str, password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(pw_hash: str, password: str)"}, {"_type": "tag", "name": "verify_token", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/auth.py", "pattern": "/^def verify_token(token: str) -> Optional[Tuple[int, str]]:$/", "language": "Python", "typeref": "typename:Optional[Tuple[int,str]]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "wrapper", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/auth.py", "pattern": "/^    def wrapper(*args, **kwargs):$/", "file": true, "language": "Python", "kind": "function", "signature": "(*args, **kwargs)", "scope": "auth_required", "scopeKind": "function"}], "hash": "22ca08e159c7a22d1981d25506a02343", "format-version": 4, "code-base-name": "note_backend", "filename": "note_backend/app/auth.py", "fields": [{"name": "TOKEN_MAX_AGE_SECONDS = 60 * 60 * 24 * 7  # 7 days", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"22": ""}]}