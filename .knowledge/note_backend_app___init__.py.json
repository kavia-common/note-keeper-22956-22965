{"is_source_file": true, "format": "Python", "description": "This file is the application entry point for a Flask-based backend, setting up configurations, extensions, blueprints, and database initialization.", "external_files": ["flask", "flask_cors", "flask_smorest", "flask_sqlalchemy", "./config", "./routes/health", "./routes/auth", "./routes/notes", "./models"], "external_methods": ["Flask", "CORS", "Api", "SQLAlchemy", "Config", "db.init_app", "app.config.from_object", "app.config.get", "app.url_map.strict_slashes", "CORS(app, resources)", "api.register_blueprint", "db.create_all"], "published": ["app", "api"], "classes": [], "methods": [{"name": "create_app()", "description": "Factory function to create and configure the Flask application, set up configurations, extensions, blueprints, and initialize the database.", "scope": "", "scopeKind": ""}], "calls": ["Flask(__name__)", "CORS(app, resources={r\"/*\": {\"origins\": \"*\"}})", "app.config.from_object(Config)", "app.config.get(\"SECRET_KEY\")", "app.config[\"SECRET_KEY\"] = \"dev-insecure-secret-change-me\"", "db.init_app(app)", "app.config[\"API_TITLE\"] = ...", "app.config[\"API_VERSION\"] = ...", "app.config[\"OPENAPI_VERSION\"] = ...", "app.config[\"OPENAPI_SWAGGER_UI_PATH\"] = ...", "app.config[\"OPENAPI_SWAGGER_UI_URL\"] = ...", "app.config[\"OPENAPI_URL_PREFIX\"] = ...", "Api(app)", "from .routes.health import blp as health_blp", "from .routes.auth import blp as auth_blp", "from .routes.notes import blp as notes_blp", "api.register_blueprint(health_blp)", "api.register_blueprint(auth_blp)", "api.register_blueprint(notes_blp)", "with app.app_context():", "from . import models", "db.create_all()", "app = create_app()", "api = Api(app)"], "search-terms": ["Flask app initialization", "Blueprint registration", "SQLAlchemy setup", "CORS configuration", "API documentation settings", "create_app function", "application factory"], "state": 2, "file_id": 3, "knowledge_revision": 16, "git_revision": "82b78c4ec9422ac60170e99505df2e786ea08f00", "revision_history": [{"10": "82b78c4ec9422ac60170e99505df2e786ea08f00"}, {"16": "82b78c4ec9422ac60170e99505df2e786ea08f00"}], "ctags": [{"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/__init__.py", "pattern": "/^api = Api(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/__init__.py", "pattern": "/^app = create_app()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_blp", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/__init__.py", "pattern": "/^    from .routes.auth import blp as auth_blp$/", "file": true, "language": "Python", "kind": "unknown", "scope": "create_app", "scopeKind": "function", "nameref": "unknown:blp"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/__init__.py", "pattern": "/^def create_app():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/__init__.py", "pattern": "/^db = SQLAlchemy()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/__init__.py", "pattern": "/^    from .routes.health import blp as health_blp$/", "file": true, "language": "Python", "kind": "unknown", "scope": "create_app", "scopeKind": "function", "nameref": "unknown:blp"}, {"_type": "tag", "name": "notes_blp", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22965/note_backend/app/__init__.py", "pattern": "/^    from .routes.notes import blp as notes_blp$/", "file": true, "language": "Python", "kind": "unknown", "scope": "create_app", "scopeKind": "function", "nameref": "unknown:blp"}], "hash": "101eaf0a3ec9afd493af62ef977985ff", "format-version": 4, "code-base-name": "note_backend", "filename": "note_backend/app/__init__.py", "fields": [{"name": "api = Api(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = create_app()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "db = SQLAlchemy()", "scope": "", "scopeKind": "", "description": "unavailable"}]}